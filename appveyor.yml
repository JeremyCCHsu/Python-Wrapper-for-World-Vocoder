environment:
  TWINE_USERNAME: __token__
  TWINE_PASSWORD:
    secure: A+ks10m1F2uReMyFye6x7fEWxuKCAFTn3Qu+Lw8T/4g3ExgSz9N8LxIEvXC+RkQwjTarXJyCOM8er4OsfYbQzfIfdMxgsuEuSY3TiPj2AssIXuNp7Xps56cRT+AQqXMp4UJ913Ryq1yKvnJHq91c6Lptx7WtWvbixrUI6p+ocV8zb8rO37KHUXR864z9h87dpwiY7ovKhV5+RF6AR+rmdt7nsaPLAd3M65r7M9v/sebaMNjhau5sizD3cwxOlzh/xVWhXABcMd+VlIhtq3xa4g==

  matrix:
    - PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      MINICONDA: C:\Miniconda3-x64

    - PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      MINICONDA: C:\Miniconda3

    - PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      MINICONDA: C:\Miniconda3-x64

    - PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
      MINICONDA: C:\Miniconda3

    - PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      MINICONDA: C:\Miniconda3-x64

    # - PYTHON_VERSION: "3.8"
    #   PYTHON_ARCH: "32"
    #   MINICONDA: C:\Miniconda3

    - PYTHON_VERSION: "3.9"
      PYTHON_ARCH: "64"
      MINICONDA: C:\Miniconda3-x64

    # - PYTHON_VERSION: "3.9"
    #   PYTHON_ARCH: "32"
    #   MINICONDA: C:\Miniconda3

    - PYTHON_VERSION: "3.10"
      PYTHON_ARCH: "64"
      MINICONDA: C:\Miniconda3-x64

    # - PYTHON_VERSION: "3.10"
    #   PYTHON_ARCH: "32"
    #   MINICONDA: C:\Miniconda3

    - PYTHON_VERSION: "3.11"
      PYTHON_ARCH: "64"
      MINICONDA: C:\Miniconda3-x64

# The above commented lines has problem executing the `test_script`
# Python >= 3.8 (32-bit)

# platform: x64

init:
  - ps: |
      Write-Output "*** Python $env:PYTHON_VERSION ***"
      $env:Path += ";$env:PYTHON_ROOT;$env:PYTHON_ROOT\Scripts"

install:
  - ps: |
      "INFO: Variables"
      "INFO: is a tag: $Env:APPVEYOR_REPO_TAG"
      "INFO: $APPVEYOR_REPO_TAG"
      "INFO: tag name: $Env:APPVEYOR_REPO_TAG_NAME"
      "INFO: $APPVEYOR_REPO_TAG_NAME"
  - "SET PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes  --set changeps1 no
  - conda update -q conda
  - conda config --add channels pypi
  - conda info -a
  - "conda create -q -n test-environment python=%PYTHON_VERSION% numpy cython wheel matplotlib"
  - activate test-environment
  - python -m pip install --no-cache-dir -U pip
  - ps: |
      Write-Output "Installing requirements..."
      pip install -r requirements.txt

build_script:
  - git submodule update --init
  - pip install -e .

test_script:
  - ps: |
      $ErrorActionPreference = "Stop"
      Set-Location "$env:APPVEYOR_BUILD_FOLDER\demo"
      python demo.py
      Set-Location "$env:APPVEYOR_BUILD_FOLDER"

after_test:
  - python setup.py bdist_wheel

artifacts:
  - path: dist\*

deploy_script:
  - ps: |
      $ErrorActionPreference = "Stop"
      if ($Env:APPVEYOR_REPO_TAG -eq "true"){
        pip install twine
        pip install -U urllib3==1.26.6
        twine upload dist/*.whl
      }
      else{
        "Not a tag (skipped)"
        "$APPVEYOR_REPO_TAG"
        "$APPVEYOR_REPO_TAG_NAME"
      }
# -and $APPVEYOR_REPO_TAG_NAME -match "^v([0-9.a-z]+)$") {
